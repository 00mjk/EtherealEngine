using namespace metal;
struct xlatMtlShaderInput {
  float4 a_normal [[attribute(0)]];
  float3 a_position [[attribute(1)]];
  float4 a_tangent [[attribute(2)]];
  float2 a_texcoord0 [[attribute(3)]];
};
struct xlatMtlShaderOutput {
  float4 gl_Position [[position]];
  float3 v_pos;
  float2 v_texcoord0;
  float3 v_wbitangent;
  float3 v_wnormal;
  float3 v_wpos;
  float3 v_wtangent;
};
struct xlatMtlShaderUniform {
  float4x4 u_viewProj;
  float4x4 u_model[32];
};
vertex xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
  float4 tmpvar_1 = 0;
  tmpvar_1.w = 1.0;
  tmpvar_1.xyz = _mtl_i.a_position;
  float3 tmpvar_2 = 0;
  tmpvar_2 = (_mtl_u.u_model[0] * tmpvar_1).xyz;
  float4 tmpvar_3 = 0;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = tmpvar_2;
  _mtl_o.gl_Position = (_mtl_u.u_viewProj * tmpvar_3);
  float4 tmpvar_4 = 0;
  tmpvar_4 = ((_mtl_i.a_normal * 2.0) - 1.0);
  float4 tmpvar_5 = 0;
  tmpvar_5.w = 0.0;
  tmpvar_5.xyz = tmpvar_4.xyz;
  float4 tmpvar_6 = 0;
  tmpvar_6 = ((_mtl_i.a_tangent * 2.0) - 1.0);
  float4 tmpvar_7 = 0;
  tmpvar_7.w = 0.0;
  tmpvar_7.xyz = tmpvar_6.xyz;
  float4 tmpvar_8 = 0;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = (((tmpvar_4.yzx * tmpvar_6.zxy) - (tmpvar_4.zxy * tmpvar_6.yzx)) * tmpvar_6.w);
  float4 tmpvar_9 = 0;
  tmpvar_9.w = 0.0;
  tmpvar_9.xyz = tmpvar_8.xyz;
  _mtl_o.v_wpos = tmpvar_2;
  _mtl_o.v_pos = (_mtl_o.gl_Position.xyz / _mtl_o.gl_Position.w);
  _mtl_o.v_wnormal = normalize((_mtl_u.u_model[0] * tmpvar_5).xyz);
  _mtl_o.v_wtangent = normalize((_mtl_u.u_model[0] * tmpvar_7).xyz);
  _mtl_o.v_wbitangent = normalize((_mtl_u.u_model[0] * tmpvar_9).xyz);
  _mtl_o.v_texcoord0 = _mtl_i.a_texcoord0;
  return _mtl_o;
}

