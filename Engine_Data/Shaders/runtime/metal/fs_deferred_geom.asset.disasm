using namespace metal;
struct xlatMtlShaderInput {
  float4 gl_FragCoord [[position]];
  float2 v_texcoord0;
  float3 v_wbitangent;
  float3 v_wnormal;
  float3 v_wpos;
  float3 v_wtangent;
};
struct xlatMtlShaderOutput {
  half4 gl_FragData_0 [[color(0)]];
  half4 gl_FragData_1 [[color(1)]];
  half4 gl_FragData_2 [[color(2)]];
};
struct xlatMtlShaderUniform {
  float4 u_camera_wpos;
  float4 u_camera_clip_planes;
  float4 u_baseColor;
  float4 u_speculatColor;
  float4 u_surfaceData;
  float4 u_tiling;
  float4 u_dither_threshold;
  float4 u_lod_params;
};
fragment xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]]
  ,   texture2d<float> s_texColor [[texture(0)]], sampler _mtlsmp_s_texColor [[sampler(0)]]
  ,   texture2d<float> s_texNormal [[texture(1)]], sampler _mtlsmp_s_texNormal [[sampler(1)]])
{
  xlatMtlShaderOutput _mtl_o;
  half4 albedoColor_1 = 0;
  float2 tmpvar_2 = 0;
  tmpvar_2 = (_mtl_i.v_texcoord0 * _mtl_u.u_tiling.xy);
  float3 tmpvar_3 = 0;
  tmpvar_3 = (_mtl_u.u_camera_wpos.xyz - _mtl_i.v_wpos);
  half3 normal_4 = 0;
  half4 tmpvar_5 = 0;
  tmpvar_5 = half4(s_texNormal.sample(_mtlsmp_s_texNormal, (float2)(tmpvar_2)));
  normal_4 = ((tmpvar_5.xyz * (half)(2.0)) - (half)(1.0));
  normal_4.xy = (normal_4.xy * (half)(2.0));
  normal_4.z = sqrt(((half)(1.0) - dot (normal_4.xy, normal_4.xy)));
  float3x3 tmpvar_6;
  tmpvar_6[0] = normalize(_mtl_i.v_wtangent);
  tmpvar_6[1] = normalize(_mtl_i.v_wbitangent);
  tmpvar_6[2] = normalize(_mtl_i.v_wnormal);
  half3 tmpvar_7 = 0;
  tmpvar_7 = normalize(((half3)(tmpvar_6 * (float3)(normalize(normal_4)))));
  half4 tmpvar_8 = 0;
  tmpvar_8 = half4(s_texColor.sample(_mtlsmp_s_texColor, (float2)(tmpvar_2)));
  half4 tmpvar_9 = 0;
  tmpvar_9 = ((half4)((float4)(tmpvar_8) * _mtl_u.u_baseColor));
  albedoColor_1.w = tmpvar_9.w;
  albedoColor_1.xyz = (tmpvar_9.xyz - ((half3)((float3)(tmpvar_9.xyz) * _mtl_u.u_surfaceData.y)));
  float3 x_10 = 0;
  x_10 = (0.08 * _mtl_u.u_speculatColor.xyz);
  float tmpvar_11 = 0;
  tmpvar_11 = clamp (((
    sqrt(dot (tmpvar_3, tmpvar_3))
   - 
    (_mtl_u.u_camera_clip_planes.x * 2.0)
  ) / _mtl_u.u_dither_threshold.y), 0.0, 1.0);
  float tmpvar_12 = 0;
  tmpvar_12 = (((
    fract((((
      (_mtl_i.gl_FragCoord.x + (_mtl_i.gl_FragCoord.y * 2.0))
     - 1.5) - 2.5) / 5.0))
   * 5.0) + fract(
    dot (float2(2.408451, 3.253521), _mtl_i.gl_FragCoord.xy)
  )) * 0.1666667);
  if (((bool)(((bool)((
    ((half)((float)(tmpvar_9.w) + (tmpvar_12 * (1.0 - _mtl_u.u_surfaceData.w))))
   < (half)(1.0))) || (
    (tmpvar_11 + tmpvar_12)
   < 1.0))) || ((_mtl_u.u_lod_params.x - 
    (tmpvar_12 * _mtl_u.u_lod_params.y)
  ) > _mtl_u.u_lod_params.z))) {
    discard_fragment();
  };
  half3 rgb_13 = 0;
  rgb_13 = ((half3)(float3(0.2729992, 0.2754701, 0.251408)) + (((half3)(float3(0.3754065, 0.4138388, 0.4158327)) * tmpvar_7.x) / (half)(2.5)));
  rgb_13 = (rgb_13 + (((half3)(float3(0.05463191, 0.05533662, 0.06837498)) * tmpvar_7.y) / (half)(2.5)));
  rgb_13 = (rgb_13 + (((half3)(float3(-0.1182273, -0.1165786, -0.1144424)) * tmpvar_7.z) / (half)(2.5)));
  rgb_13 = (rgb_13 + ((tmpvar_7.x * 
    ((half3)(float3(-0.193066, -0.1860953, -0.1653518)) * tmpvar_7.z)
  ) / (half)(2.5)));
  rgb_13 = (rgb_13 + ((tmpvar_7.x * (half3)(float3(0.06811063, 0.0651928, 0.0526064))) * tmpvar_7.y));
  rgb_13 = (rgb_13 + ((half3)(float3(0.0002921123, -0.005139745, -0.01390948)) * (
    (((half)(3.0) * tmpvar_7.y) * tmpvar_7.y)
   - (half)(1.0))));
  rgb_13 = (rgb_13 + ((tmpvar_7.z * (half3)(float3(-0.1618968, -0.1536498, -0.1329239))) * tmpvar_7.y));
  rgb_13 = (rgb_13 + ((half3)(float3(-0.02180363, -0.02986507, -0.04293958)) * (
    (tmpvar_7.z * tmpvar_7.z)
   - 
    (tmpvar_7.x * tmpvar_7.x)
  )));
  half4 tmpvar_14 = 0;
  tmpvar_14.w = half(1.0);
  tmpvar_14.xyz = rgb_13;
  _mtl_o.gl_FragData_0 = (albedoColor_1 * tmpvar_14);
  half4 tmpvar_15 = 0;
  tmpvar_15.w = half(1.0);
  tmpvar_15.xyz = ((tmpvar_7 * (half)(0.5)) + (half)(0.5));
  _mtl_o.gl_FragData_1 = tmpvar_15;
  half4 tmpvar_16 = 0;
  tmpvar_16.w = half(1.0);
  tmpvar_16.xyz = ((half3)mix (x_10, (float3)tmpvar_9.xyz, _mtl_u.u_surfaceData.y));
  _mtl_o.gl_FragData_2 = tmpvar_16;
  return _mtl_o;
}

