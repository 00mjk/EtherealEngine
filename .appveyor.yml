shallow_clone: false

environment:
  matrix:
  - COMPILER: MINGW_482
    ARCHITECTURE: x86
  - COMPILER: MINGW_W64
    ARCHITECTURE: x64
  - COMPILER: MSVC_15
    ARCHITECTURE: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - COMPILER: MSVC_15
    ARCHITECTURE: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - COMPILER: MSVC_14
    ARCHITECTURE: x86
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
  - COMPILER: MSVC_14
    ARCHITECTURE: x64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015


build:
  verbosity: detailed
  parallel: true

install:
  #######################################################################################
  # All external dependencies are installed in C:\projects\deps
  #######################################################################################
  - mkdir C:\projects\deps
  - cd C:\projects\deps

  #######################################################################################
  # Install Ninja
  #######################################################################################
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

  #######################################################################################
  # Install MinGW
  #######################################################################################
  - IF "%COMPILER%" == "MINGW_W64" appveyor-retry appveyor DownloadFile http://downloads.sourceforge.net/mingw-w64/x86_64-5.3.0-release-posix-seh-rt_v4-rev0.7z
  - IF "%COMPILER%" == "MINGW_W64" 7z x x86_64-5.3.0-release-posix-seh-rt_v4-rev0.7z -oc:\ > nul  

  #######################################################################################
  # CMake
  #######################################################################################
  - cmake --version


before_build:
  - cmd: cd C:\projects\etherealengine
  - IF "%ARCHITECTURE%" == "x86" IF "%COMPILER%" == "MSVC_15" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\vsdevcmd.bat" -arch=x86 -host_arch=x64
  - IF "%ARCHITECTURE%" == "x64" IF "%COMPILER%" == "MSVC_15" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\vsdevcmd.bat" -arch=x64 -host_arch=x64
  - IF "%ARCHITECTURE%" == "x86" IF "%COMPILER%" == "MSVC_14" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\vsvars32.bat"
  - IF "%ARCHITECTURE%" == "x64" IF "%COMPILER%" == "MSVC_14" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\x86_amd64\vcvarsx86_amd64.bat"
  - IF "%ARCHITECTURE%" == "x86" IF "%COMPILER%" == "MINGW_482" set PATH=C:\Qt\Tools\mingw482_32\bin;%PATH%
  - IF "%ARCHITECTURE%" == "x64" IF "%COMPILER%" == "MINGW_W64" set PATH=C:\mingw64\bin;%PATH%
  
#######################################################################################
# we can use Ninja for all configurations
#######################################################################################
build_script:
  - git submodule init
  - git submodule update
  - mkdir build
  - cd build
  - cmake -G "Ninja" ..
  - cmake --build . --config Debug
